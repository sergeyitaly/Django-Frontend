{"id":"../../../node_modules/bezier-easing/src/index.js","dependencies":[{"name":"C:\\Diplom1\\todoApp\\package.json","includedInParent":true,"mtime":1644155722403},{"name":"C:\\Diplom1\\todoApp\\.babelrc","includedInParent":true,"mtime":1644155987946},{"name":"C:\\Diplom1\\todoApp\\node_modules\\bezier-easing\\package.json","includedInParent":true,"mtime":1644149759239}],"generated":{"js":"/**\n * https://github.com/gre/bezier-easing\n * BezierEasing - use bezier curve for transition easing function\n * by Gaëtan Renaudeau 2014 - 2015 – MIT License\n */\n\n// These values are established by empiricism with tests (tradeoff: performance VS precision)\nvar NEWTON_ITERATIONS = 4;\nvar NEWTON_MIN_SLOPE = 0.001;\nvar SUBDIVISION_PRECISION = 0.0000001;\nvar SUBDIVISION_MAX_ITERATIONS = 10;\n\nvar kSplineTableSize = 11;\nvar kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n\nvar float32ArraySupported = typeof Float32Array === 'function';\n\nfunction A (aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\nfunction B (aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\nfunction C (aA1)      { return 3.0 * aA1; }\n\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nfunction calcBezier (aT, aA1, aA2) { return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT; }\n\n// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\nfunction getSlope (aT, aA1, aA2) { return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1); }\n\nfunction binarySubdivide (aX, aA, aB, mX1, mX2) {\n  var currentX, currentT, i = 0;\n  do {\n    currentT = aA + (aB - aA) / 2.0;\n    currentX = calcBezier(currentT, mX1, mX2) - aX;\n    if (currentX > 0.0) {\n      aB = currentT;\n    } else {\n      aA = currentT;\n    }\n  } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n  return currentT;\n}\n\nfunction newtonRaphsonIterate (aX, aGuessT, mX1, mX2) {\n for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\n   var currentSlope = getSlope(aGuessT, mX1, mX2);\n   if (currentSlope === 0.0) {\n     return aGuessT;\n   }\n   var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n   aGuessT -= currentX / currentSlope;\n }\n return aGuessT;\n}\n\nfunction LinearEasing (x) {\n  return x;\n}\n\nmodule.exports = function bezier (mX1, mY1, mX2, mY2) {\n  if (!(0 <= mX1 && mX1 <= 1 && 0 <= mX2 && mX2 <= 1)) {\n    throw new Error('bezier x values must be in [0, 1] range');\n  }\n\n  if (mX1 === mY1 && mX2 === mY2) {\n    return LinearEasing;\n  }\n\n  // Precompute samples table\n  var sampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\n  for (var i = 0; i < kSplineTableSize; ++i) {\n    sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n  }\n\n  function getTForX (aX) {\n    var intervalStart = 0.0;\n    var currentSample = 1;\n    var lastSample = kSplineTableSize - 1;\n\n    for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n      intervalStart += kSampleStepSize;\n    }\n    --currentSample;\n\n    // Interpolate to provide an initial guess for t\n    var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n    var guessForT = intervalStart + dist * kSampleStepSize;\n\n    var initialSlope = getSlope(guessForT, mX1, mX2);\n    if (initialSlope >= NEWTON_MIN_SLOPE) {\n      return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n    } else if (initialSlope === 0.0) {\n      return guessForT;\n    } else {\n      return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n    }\n  }\n\n  return function BezierEasing (x) {\n    // Because JavaScript number are imprecise, we should guarantee the extremes are right.\n    if (x === 0) {\n      return 0;\n    }\n    if (x === 1) {\n      return 1;\n    }\n    return calcBezier(getTForX(x), mY1, mY2);\n  };\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../../../node_modules/bezier-easing/src/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}}],"sources":{"../../../node_modules/bezier-easing/src/index.js":"/**\n * https://github.com/gre/bezier-easing\n * BezierEasing - use bezier curve for transition easing function\n * by Gaëtan Renaudeau 2014 - 2015 – MIT License\n */\n\n// These values are established by empiricism with tests (tradeoff: performance VS precision)\nvar NEWTON_ITERATIONS = 4;\nvar NEWTON_MIN_SLOPE = 0.001;\nvar SUBDIVISION_PRECISION = 0.0000001;\nvar SUBDIVISION_MAX_ITERATIONS = 10;\n\nvar kSplineTableSize = 11;\nvar kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n\nvar float32ArraySupported = typeof Float32Array === 'function';\n\nfunction A (aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\nfunction B (aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\nfunction C (aA1)      { return 3.0 * aA1; }\n\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nfunction calcBezier (aT, aA1, aA2) { return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT; }\n\n// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\nfunction getSlope (aT, aA1, aA2) { return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1); }\n\nfunction binarySubdivide (aX, aA, aB, mX1, mX2) {\n  var currentX, currentT, i = 0;\n  do {\n    currentT = aA + (aB - aA) / 2.0;\n    currentX = calcBezier(currentT, mX1, mX2) - aX;\n    if (currentX > 0.0) {\n      aB = currentT;\n    } else {\n      aA = currentT;\n    }\n  } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n  return currentT;\n}\n\nfunction newtonRaphsonIterate (aX, aGuessT, mX1, mX2) {\n for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\n   var currentSlope = getSlope(aGuessT, mX1, mX2);\n   if (currentSlope === 0.0) {\n     return aGuessT;\n   }\n   var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n   aGuessT -= currentX / currentSlope;\n }\n return aGuessT;\n}\n\nfunction LinearEasing (x) {\n  return x;\n}\n\nmodule.exports = function bezier (mX1, mY1, mX2, mY2) {\n  if (!(0 <= mX1 && mX1 <= 1 && 0 <= mX2 && mX2 <= 1)) {\n    throw new Error('bezier x values must be in [0, 1] range');\n  }\n\n  if (mX1 === mY1 && mX2 === mY2) {\n    return LinearEasing;\n  }\n\n  // Precompute samples table\n  var sampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\n  for (var i = 0; i < kSplineTableSize; ++i) {\n    sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n  }\n\n  function getTForX (aX) {\n    var intervalStart = 0.0;\n    var currentSample = 1;\n    var lastSample = kSplineTableSize - 1;\n\n    for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n      intervalStart += kSampleStepSize;\n    }\n    --currentSample;\n\n    // Interpolate to provide an initial guess for t\n    var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n    var guessForT = intervalStart + dist * kSampleStepSize;\n\n    var initialSlope = getSlope(guessForT, mX1, mX2);\n    if (initialSlope >= NEWTON_MIN_SLOPE) {\n      return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n    } else if (initialSlope === 0.0) {\n      return guessForT;\n    } else {\n      return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n    }\n  }\n\n  return function BezierEasing (x) {\n    // Because JavaScript number are imprecise, we should guarantee the extremes are right.\n    if (x === 0) {\n      return 0;\n    }\n    if (x === 1) {\n      return 1;\n    }\n    return calcBezier(getTForX(x), mY1, mY2);\n  };\n};\n"},"lineCount":108}},"error":null,"hash":"ebedca351052871a7d8d6039fabaf932","cacheData":{"env":{}}}